apiVersion: k3d.io/v1alpha5
kind: Simple
metadata:
  name: ${K3D_CLUSTER_NAME}
servers: 1
agents: 1
image: "rancher/k3s:${K3S_VERSION}"
ports:
  # Localstack - 4566 set to nodeport 31566 and it will be accessible from host using 4566
  - port: 4566:31566
    nodeFilters:
      - loadbalancer
  # REST Catalog - polaris 18181 set to port 32181 and it will be accessible via 18181
  - port: 18181:32181
    nodeFilters:
      - loadbalancer
  # Trino DB - trino 8080 set to port 30080 and will be accessibe via 18080 from host
  - port: 18080:30080
    nodeFilters:
      - loadbalancer
registries: # define how registries should be created or used
  create: # creates a default registry to be used with the cluster; same as `--registry-create registry.localhost`
    name: registry.localhost
    host: "0.0.0.0"
    hostPort: "5001"

volumes:
  # Deploy PostgreSQL
  - volume: ${FEATURES_DIR}/features/postgresql.yaml:/var/lib/rancher/k3s/server/manifests/postgresql.yaml
    nodeFilters:
      - server:*
  # Deploy Localstack
  - volume: ${FEATURES_DIR}/features/localstack.yaml:/var/lib/rancher/k3s/server/manifests/localstack.yaml
    nodeFilters:
      - server:*
  # Deploy TektonCD
  - volume: ${FEATURES_DIR}/features/tektoncd.yaml:/var/lib/rancher/k3s/server/manifests/tektoncd.yaml
    nodeFilters:
      - server:*
